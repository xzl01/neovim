From: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
Date: Sun, 7 Jan 2024 14:59:20 -0500
X-Dgit-Generated: 0.9.5-2 d86df9f8a81e71047af0bc20de96cd7ab0fb41ce
Subject: fix(tui): use buflen to calculate remaining buffer size (#26942)

buf is a pointer argument, not a local char array, so sizeof(buf) is just the size of a pointer type on the platform.  This is always an incorrect value, but on 32-bit platforms it actually has an impact, since sizeof(buf) is just 4 and causes the buffer to get truncated.

(cherry picked from commit 367e52cc79a786bbee4456b30f9ec5db7e28d6a5)

Co-authored-by: James McCoy <jamessan@jamessan.com>

---

diff --git a/src/nvim/tui/input.c b/src/nvim/tui/input.c
index 6280c4805..743f8940c 100644
--- a/src/nvim/tui/input.c
+++ b/src/nvim/tui/input.c
@@ -237,13 +237,13 @@ static size_t handle_termkey_modifiers(TermKeyKey *key, char *buf, size_t buflen
 {
   size_t len = 0;
   if (key->modifiers & TERMKEY_KEYMOD_SHIFT) {  // Shift
-    len += (size_t)snprintf(buf + len, sizeof(buf) - len, "S-");
+    len += (size_t)snprintf(buf + len, buflen - len, "S-");
   }
   if (key->modifiers & TERMKEY_KEYMOD_ALT) {  // Alt
-    len += (size_t)snprintf(buf + len, sizeof(buf) - len, "A-");
+    len += (size_t)snprintf(buf + len, buflen - len, "A-");
   }
   if (key->modifiers & TERMKEY_KEYMOD_CTRL) {  // Ctrl
-    len += (size_t)snprintf(buf + len, sizeof(buf) - len, "C-");
+    len += (size_t)snprintf(buf + len, buflen - len, "C-");
   }
   assert(len < buflen);
   return len;
